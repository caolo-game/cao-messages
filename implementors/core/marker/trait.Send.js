(function() {var implementors = {};
implementors["cao_messages"] = [{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for StructureType","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;A0&gt; Send for Which&lt;A0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A0: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl !Send for Client","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;_T&gt; Send for ServerDispatch&lt;_T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;_T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl&lt;A0, A1, A2, A3, A4, A5&gt; Send for Which&lt;A0, A1, A2, A3, A4, A5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A0: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;A1: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;A2: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;A3: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;A4: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;A5: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]}];
implementors["capnp"] = [{"text":"impl Send for Word","synthetic":true,"types":[]},{"text":"impl Send for MessageSize","synthetic":true,"types":[]},{"text":"impl Send for NotInSchema","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ErrorKind","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OutputSegments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Pipeline","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, E&gt; !Send for Promise&lt;T, E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Results&gt; !Send for RemotePromise&lt;Results&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Results&gt; !Send for Response&lt;Results&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Params, Results&gt; !Send for Request&lt;Params, Results&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Params&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Results&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Client","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Reader&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Builder&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Reader&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Reader&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Builder&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Reader&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Builder&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReaderOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SegmentArray&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Reader&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, T&gt; Send for TypedReader&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for HeapAllocator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ScratchSpaceHeapAllocator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AllocationStrategy","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Reader&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Builder&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReadLimiter","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for ReaderArenaImpl&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Send for BuilderArenaImplInner&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; !Send for BuilderArenaImpl&lt;A&gt;","synthetic":true,"types":[]},{"text":"impl Send for NullArena","synthetic":true,"types":[]},{"text":"impl Send for PipelineOp","synthetic":true,"types":[]},{"text":"impl Send for StructSize","synthetic":true,"types":[]},{"text":"impl Send for WirePointer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PointerReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PointerBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StructReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StructBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ListReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ListBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ElementSize","synthetic":true,"types":[]},{"text":"impl Send for WirePointerKind","synthetic":true,"types":[]},{"text":"impl Send for PointerType","synthetic":true,"types":[]},{"text":"impl !Send for CapTableReader","synthetic":true,"types":[]},{"text":"impl !Send for CapTableBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SliceSegments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for OwnedSegments","synthetic":true,"types":[]},{"text":"impl Send for SegmentLengthsBuilder","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Owned&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Reader&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Builder&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Owned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Reader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Builder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Send for ListIter&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for Builder&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send + Allocator,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()